name: Ryzen Nightly - Test

on:
  workflow_dispatch:
  schedule:
    - cron: 0 17 * * * # every day at 5pm UTC

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  run_tests_prequantized_models:
    uses: huggingface/hf-workflows/.github/workflows/ryzenai_ci.yaml@main
    with:
      pytest_marker: "prequantized_model_test"
      test_file: "tests/ryzenai/test_modeling.py"
      report_name: "tests_prequantized_models"
      
  run_tests_quantization:
    uses: huggingface/hf-workflows/.github/workflows/ryzenai_ci.yaml@main
    with:
      pytest_marker: "quant_test"
      test_file: "tests/ryzenai/test_quantization.py"
      report_name: "tests_quantization"
      slow_test: true
      timeout_minutes: 1200
    secrets:
      hf_hub_read_token: ${{ secrets.HF_READ_TOKEN }}
  send_results:
    name: Send results to webhook
    runs-on: ubuntu-22.04
    if: always()
    needs: [
      run_tests_prequantized_models,
      run_tests_quantization,
    ]
    steps:
      - uses: actions/checkout@v3
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./reports/
      - name: Send message to Slack
        env:
          CI_SLACK_BOT_TOKEN: ${{ secrets.CI_SLACK_BOT_TOKEN }}
          CI_SLACK_CHANNEL_ID: ${{ secrets.CI_SLACK_CHANNEL_ID }}
          CI_EVENT: scheduled
          CI_SHA: ${{ github.sha }}
          CI_WORKFLOW_REF: ${{ github.workflow_ref }}
        run: |
          sudo apt-get install -y curl
          pip install slack_sdk transformers
          pip show slack_sdk
          ls reports/**
          python utils/ryzenai/notification_service.py

      # Upload complete failure tables, as they might be big and only truncated versions could be sent to Slack.
      - name: Failure table artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: prev_ci_results
          path: prev_ci_results
